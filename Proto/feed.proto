syntax = "proto3";
package feed;

service FeedHandler {
    // Subscribe to the server and listen to the feed
    // tell the server about your state and receive
    // a article preview for the main page of the app
    rpc Subscribe (stream SubRequest) returns (stream SubResponse);
}

message SubRequest {
    oneof state {
        // When the user does a hard refresh or cold start of the app
        // this will tell the server to start fresh with the latest
        // post at the top
        bool start_fresh = 1;
        // This article id will be accociated with user + article
        // filtering it from the next 'start_refresh' scenario
        string watched_article_id = 2;
        // The client can ask for a maximum amount of feed articles per reponse cycle
        int32 count = 3;
    }
}

message SubResponse {
    // Either get a article feed post or the
    // associated image
    oneof value {
        FeedArticle info = 1;
        FeedImage image = 2;
    }
}

message FeedImage {
    bool is_done = 1;
    bytes chunk_data = 2;
}

message FeedArticle {
    string article_id = 1;
    int32 likes = 2;
    int32 comments = 3;
}

